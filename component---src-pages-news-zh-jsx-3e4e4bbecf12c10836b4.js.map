{"version":3,"file":"component---src-pages-news-zh-jsx-3e4e4bbecf12c10836b4.js","mappings":"qJAEA,SAASA,EAAWC,EAASC,GACzB,MAAOC,EAAMC,GAASH,EAAQI,MAAM,KAMpC,MAAa,OAATH,EACQ,GANO,CACf,MAAO,MAAO,MAAO,MAAO,MAAO,MACnC,MAAO,MAAO,MAAO,MAAO,MAAO,OAIdE,EAAQ,OAAOD,IACpB,OAATD,EACC,GAAEC,OAAUC,MAEb,qBAEf,C,uBCCA,SAASE,EAAK,GAAoB,IAApB,KAAEC,EAAI,QAAEC,GAAS,EAC3B,MAAMC,GAAWC,EAAAA,EAAAA,GAASF,GAE1B,OACI,sBAAIG,UAAU,8BACV,uBAAKA,UAAU,+BACTJ,GAEN,uBAAKI,UAAU,iBACX,gBAACF,EAAO,OAIxB,CAUe,SAASG,EAAS,GAAY,IAAZ,MAAEC,GAAO,EACtC,MAAMX,GAAOY,EAAAA,EAAAA,YAAWC,EAAAA,GACxB,IAAIC,EDlBO,SAAqBd,GAgBhC,OAfWe,EAAAA,EAAAA,IAAe,cAedC,YAAYC,MAAMC,KAAI,QAAC,KAAEC,GAAM,QAAM,CAC7Cd,KAAMP,EAAWqB,EAAKd,KAAML,GAC5BM,QAASa,EAAKb,QAAQN,GACzB,GACL,CCFoBoB,CAAYpB,GAE5B,MAAMqB,EAAqB,OAATrB,EAAgB,OAAS,KACrCsB,EAAuB,OAATtB,EAAgB,eAAiB,OAC/CuB,EAAqB,OAATvB,EAAgB,QAAU,WAE5C,OAAc,IAAVW,EAII,uBAAKF,UAAU,SACX,uBAAKA,UAAU,gCACTY,GAEN,0BACKP,EAAUI,KAAI,CAAC,EAAmBM,KAAK,IAAxB,KAAEnB,EAAI,QAAEC,GAAS,SAC7B,gBAACF,EAAI,CAACqB,IAAKD,EAAOnB,KAAMA,EAAMC,QAASA,GAAgB,OATvEQ,EAAYA,EAAUY,MAAM,EAAGf,GAiB/B,uBAAKF,UAAU,iDACX,uBAAKA,UAAU,4CACTY,GAEN,0BACKP,EAAUI,KAAI,CAAC,EAAmBM,KAAK,IAAxB,KAAEnB,EAAI,QAAEC,GAAS,SAC7B,gBAACF,EAAI,CAACqB,IAAKD,EAAOnB,KAAMA,EAAMC,QAASA,GAAgB,KAG/D,uBAAKG,UAAU,8BACX,gBAAC,KAAI,CAACkB,GAAIJ,GACJD,KAKtB,C,wFCxEe,SAASM,IACpB,OACI,gBAAC,IAAM,KACH,uBAAKnB,UAAU,gDACX,gBAAC,IAAQ,CAACE,MAAO,KAIjC,C,0ICVe,SAASkB,IACpB,OACI,gBAAC,IAAYC,SAAQ,CAACC,MAAM,MACxB,gBAAC,IAAS,MAGtB,CAEO,MAAMC,EAAO,IAAM,gBAAC,IAAG,CAACC,MAAM,M","sources":["webpack://lab/./src/hooks/useNewsData.js","webpack://lab/./src/components/common-page/news-list.jsx","webpack://lab/./src/components/news/news-index.jsx","webpack://lab/./src/pages/news-zh.jsx"],"sourcesContent":["import { useStaticQuery, graphql } from \"gatsby\"\n\nfunction formatDate(dateStr, lang) {\n    const [year, month] = dateStr.split('-');\n    const monthNames = [\n        \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n        \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n    ];\n    \n    if (lang === \"en\") {\n        return `${monthNames[month - 1]}, ${year}`;\n    } else if (lang === \"zh\") {\n        return `${year} 年 ${month} 月`;\n    } else {\n        return \"Invalid Date Format\";\n    }\n}\n\n/**\n * 返回新闻数据\n * \n * @param {string} lang 语言\n * @returns {{date: string, content: string}[]} \n */\nexport default function useNewsData(lang) {\n    let data = useStaticQuery(graphql`\n        query {\n            allNewsJson {\n                edges {\n                    node {\n                        date\n                        content {\n                            en\n                            zh\n                        }\n                    }\n                }\n            }\n        }\n    `)\n    return data.allNewsJson.edges.map(({ node }) => ({\n        date: formatDate(node.date, lang),\n        content: node.content[lang]\n    }))\n}","import * as React from \"react\"\nimport { useContext } from \"react\"\nimport { Link } from \"gatsby\"\n\nimport useNewsData from \"../../hooks/useNewsData\"\nimport mdxToJsx from \"../../utils/mdx-to-jsx\"\nimport { LangContext } from \"../../contexts/lang-context\"\n\n\n/**\n * 新闻列表项\n * \n * @param {Object} props\n * @param {string} props.date - 日期\n * @param {string} props.content - 新闻内容，使用 Markdown 格式\n * @returns {React.ReactNode}\n */\nfunction News({ date, content }) {\n    const Content =  mdxToJsx(content)\n\n    return (\n        <li className=\"mb-4 flex flex-col text-sm\">\n            <div className=\"text-gray-900 font-semibold\">\n                { date }\n            </div>\n            <div className=\"text-gray-700\">\n                <Content></Content>\n            </div>\n        </li>\n    )\n}\n\n\n/**\n * 新闻列表\n * \n * @param {Object} props\n * @param {Number} props.count - 要显示的新闻数量，当为 0 时显示全部\n * @returns {React.ReactNode}\n */\nexport default function NewsList({ count }) {\n    const lang = useContext(LangContext)\n    let newsDatas = useNewsData(lang)\n\n    const newsLabel = lang === \"en\" ? \"News\" : \"新闻\"\n    const seeAllLabel = lang === \"en\" ? \"See all news\" : \"更多新闻\"\n    const seeAllUrl = lang === \"en\" ? \"/news\" : \"/news-zh\"\n\n    if (count !== 0) {\n        newsDatas = newsDatas.slice(0, count)\n    } else {\n        return (\n            <div className=\"py-10\">\n                <div className=\"text-3xl mb-10 tracking-wide\">\n                    { newsLabel }\n                </div>\n                <ul>\n                    {newsDatas.map(({ date, content }, index) => (\n                        <News key={index} date={date} content={content}></News>\n                    ))}\n                </ul>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"ml:w-1/3 my-6 px-8 bg-slate-50 rounded ring-1\">\n            <div className=\"my-6 text-lg font-semibold tracking-wide\">\n                { newsLabel }\n            </div>\n            <ul>\n                {newsDatas.map(({ date, content }, index) => (\n                    <News key={index} date={date} content={content}></News>\n                ))}\n            </ul>\n            <div className=\"text-sm tracking-wide my-6\">\n                <Link to={seeAllUrl}>\n                    { seeAllLabel }\n                </Link>\n            </div>\n        </div>\n    )\n}","import * as React from \"react\"\n\nimport Layout from \"../common/layout\"\nimport NewsList from \"../common-page/news-list\"\n\n/**\n * 新闻页面入口\n * \n * @returns {React.ReactNode}\n */\nexport default function NewsIndex() {\n    return (\n        <Layout>\n            <div className=\"[&_a]:text-xmu-blue-70 hover:[&_a]:underline\">\n                <NewsList count={0}></NewsList>\n            </div>\n        </Layout>\n    )\n}","import * as React from \"react\"\n\nimport { LangContext } from \"../contexts/lang-context\"\n\nimport Seo from \"../components/common/seo\"\nimport NewsIndex from \"../components/news/news-index\"\n\n\nexport default function NewsZhPage() {\n    return (\n        <LangContext.Provider value=\"zh\">\n            <NewsIndex />\n        </LangContext.Provider>\n    )\n}\n\nexport const Head = () => <Seo title=\"新闻\" />\n"],"names":["formatDate","dateStr","lang","year","month","split","News","date","content","Content","mdxToJsx","className","NewsList","count","useContext","LangContext","newsDatas","useStaticQuery","allNewsJson","edges","map","node","useNewsData","newsLabel","seeAllLabel","seeAllUrl","index","key","slice","to","NewsIndex","NewsZhPage","Provider","value","Head","title"],"sourceRoot":""}